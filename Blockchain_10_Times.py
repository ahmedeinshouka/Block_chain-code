# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jcAIEGKGHMAAHvE5VD77N3V2bTVMSk-a
"""

# Import the library
import hashlib

# Create a Block class
class Block:
    # Create a constructor for the block class
    def __init__(self, data, prev_hash):
        self.data = data
        self.prev_hash = prev_hash
        self.hash = self.calc_hash()

    # Create a method that calculates the hash using SHA-256
    def calc_hash(self):
        sha = hashlib.sha256()
        sha.update(self.data.encode('utf-8'))
        sha.update(self.prev_hash.encode('utf-8'))  # Include the previous hash in the current hash calculation
        return sha.hexdigest()

# Create The Blockchain class
class Blockchain:
    # Create a constructor for The Block chain class
    def __init__(self):
        self.chain = [self.create_genesis_block()]

    # Create a method that creates the first block in the blockchain also known as the 'Genesis Block'
    def create_genesis_block(self):
        return Block("Genesis Block", "0")

    # Create a method that creates a new block and adds it to the Blockchain (aka the list)
    def add_block(self, data):
        prev_block = self.chain[-1]
        new_block = Block(data, prev_block.hash)
        self.chain.append(new_block)

# Test The Blockchain
blockchain = Blockchain()

# Add blocks to the blockchain
blockchain.add_block('First block')
blockchain.add_block('Second block')
blockchain.add_block('Third block')
blockchain.add_block('Fourth block')
blockchain.add_block('Fifth block')
blockchain.add_block('sixth block')
blockchain.add_block('seventh block')
blockchain.add_block('Eighth block')
blockchain.add_block('Ninth block')
blockchain.add_block('Tenth block')


print('Blockchain:')
for block in blockchain.chain:
  print('Data:',block.data)
  print('Previous hash:',block.prev_hash)
  print('Hash:',block.hash)
  print()